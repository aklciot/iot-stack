version: '3'

services:
  traefik-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.3
    container_name: traefik-proxy
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      # the following line ensure all http traffic is redirected to https
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.mqttsecure.address=:8883"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myresolver.acme.httpchallenge=web"
      - "--certificatesresolvers.myresolver.acme.email=aklciot@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      - "8883:8883"
      - "8080:8080"

    restart: always
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - "./letsencrypt:/letsencrypt"

  thingsboard:
    image: thingsboard/tb-postgres
    container_name: thingsboard
    expose:
      - "9090"
    ports:
      - "7883:1883"
      #- "9090:9090"
      #- "5683:5683/udp"
    volumes:
      - tb-data:/data
      - ./thingsboard/logs:/logs
    restart: always
    environment:
      TB_QUEUE_TYPE: in-memory
    labels:
      - traefik.enable=true
      - traefik.http.routers.thingsboard.rule=Host(`thingsboard-iottest.innovateauckland.nz`)
      - traefik.http.routers.thingsboard.entrypoints=websecure
      - traefik.http.routers.thingsboard.tls.certresolver=myresolver
      - traefik.http.services.thingsboard.loadbalancer.server.port=9090

  nodered:
    image: nodered/node-red
    container_name: nodered
    expose:
        - "1880"
    volumes:
        - ./nodered/data:/data
    restart: always

    labels:
        - traefik.enable=true
        - traefik.http.routers.nodered.rule=Host(`nodered-iottest.innovateauckland.nz`)
        - traefik.http.routers.nodered.entrypoints=websecure
        - traefik.http.routers.nodered.tls.certresolver=myresolver
        - traefik.http.services.nodered.loadbalancer.server.port=1880

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    expose:    
        - "9001"
    ports:
        - "1883:1883"
    volumes:
        - ./mosquitto/config:/mosquitto/config
        - ./mosquitto/log:/mosquitto/log
    restart: always

    labels:
        - "traefik.enable=true"
        - "traefik.tcp.routers.mqtt.rule=Host(`mqtt-iottest.innovateauckland.nz`)"
        - "traefik.tcp.routers.mqtt.entrypoints=mqttsecure"
        - "traefik.tcp.routers.mqtt.tls.certresolver=myresolver"
        - "traefik.tcp.routers.mqtt.rule=HostSNI(`*`)"
        - "traefik.tcp.services.mosquitto.loadbalancer.server.port=1883"

volumes:
    tb-data: